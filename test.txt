use git status to check..
I need more practice to learn it.

Demo:

$ cd ~/Projects/Repo  (empty)
$ git init 
$ git add * 
$ git commit -m "The first commit of Project: Repo"

$ cd ~/Projects
$ git clone --bare Repo Repo.git

$ cp ~/Projects/Repo.git E:/git/  (hub shared repo)

$ cd ~/Projects 
$ rm -f -r Repo
$ git clone E:/git/Repo.git (可以在任何目录下用此命令从原始库checkout!)

大功告成，目前的项目状态就是：
 　　当前工作副本是 ~/Projects/Repo，原始仓库是 E:/git/，当你愉快的工作了一个星期，进行了若干次 commit 提交操作，到了周末需要备份项目的时候（虽然一个星期备份一次是很不好的习惯，最好一天一次），只需要:
$ cd ~/Projects/
$ git commit -m "Last commit and then push" 
$ git push
 

另外一个可能会因为 Diary 中文件被更改而被 Git 拒绝推送的操作是：1
$ cd ~/Projects/
$ git remote add origin E:/git/Repo.git 
$ git commit -m "Last commit and then push" 
$ git push origin master 
或者 
$ git push

-- The END --

GIT merge tool

Configuration
meld is a useful three-way-compare merge tool. you can use it in Git. 
 sudo apt-get install meld;            (install meld)
 git config --global merge.tool meld;  (set Git merge tool default as meld)
Usage
When you merge a branch in Git, it may get into conflict state, if you need to go on, you need fix these conflict, but if you need to go back to the state before merge, you can you use 
 git reset --hard; (get me back)
If you want to fix the conflicts, use 
 git mergetool;   
 
 
 http://www.cnblogs.com/sinojelly/archive/2011/08/07/2130172.html
 Git下的冲突解决
 
 
 
 What's a good (free) visual merge tool for Git? (on windows)
http://stackoverflow.com/questions/7227826/whats-a-good-free-visual-merge-tool-for-git-on-windows

推荐:
WinMerge  http://winmerge.org/
WinMerge is an Open Source differencing and merging tool for Windows. WinMerge can compare both folders and files, presenting differences in a visual text format that is easy to understand and handle.
